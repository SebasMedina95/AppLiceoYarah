spring.application.name=yarah-ms-persons
server.port=18881
custom.activeProfileName=local

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# Configuracion de base de datos.

# Cuando usamos host.docker.internal es porque hablamos de consumos donde por ejemplo la BD esta por fuera de Docker
# spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/yarah_ms_persons_db

# Cuando usamos localhost es porque trabajaremos localmente sin necesidad de Docker
# spring.datasource.url=jdbc:postgresql://localhost:5432/yarah_ms_persons_db

# Trabajamos con Docker y sobre la misma red donde ya tenemos la base de datos asociada
# El yarah-db-ms-persons es el nombre que le dimos al contenedor con la base de datos
# No olvidemos que en la creacion del contenedor de BD docker dijimos que la BD se llama yarah_ms_persons_db
spring.datasource.url=jdbc:postgresql://yarah-db-ms-persons:5432/yarah_ms_persons_db

spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Visualizar consultas en la consola
spring.jpa.show-sql=true

# Documentacion swagger
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Cada vez que actualicemos la entidad, actualizar BD.
spring.jpa.hibernate.ddl-auto=update

#Definicion de un contexto si llega a ser requerido
server.servlet.context-path=/business